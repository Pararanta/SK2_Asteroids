const char* vertex_circle_src = "\n"
"#version 410\n"
"\n"
"in vec3 coord;\n"
"in vec3 color;\n"
"\n"
"out vec3 gCoords;\n"
"out vec3 gColor;\n"
"\n"
"void main() {\n"
"	gColor = color;\n"
"	gCoords = coord;\n"
"	gl_Position = vec4(coord.xy*2 - 1, 0.0f, 1.0f);\n"
"}\n"
"\n";

const char* geometry_circle_src = "\n"
"#version 410\n"
"layout (points) in;\n"
"layout (triangle_strip) out;\n"
"layout (max_vertices = 4) out;\n"
"\n"
"in vec3 gColor[];\n"
"in vec3 gCoords[];\n"
"\n"
"out vec3 fColor;\n"
"out vec2 fUV;\n"
"\n"
"void main()\n"
"{\n"
"    fColor = gColor[0];\n"
"    vec4 position = vec4(gl_in[0].gl_Position.xy, 0.0f, 1.0f);\n"
"    vec4 base_offset = vec4(gCoords[0].z, gCoords[0].z, 0, 0);\n"
"\n"
"    gl_Position = position + base_offset*vec4(-1, -1, 0, 0);\n"
"    fUV = vec2(-1.0f, -1.0f);\n"
"    EmitVertex();\n"
"\n"
"    gl_Position = position + base_offset*vec4(1, -1, 0, 0);\n"
"    fUV = vec2(1.0f, -1.0f);\n"
"    EmitVertex();\n"
"\n"
"    gl_Position = position + base_offset*vec4(-1, 1, 0, 0);\n"
"    fUV = vec2(-1.0f, 1.0f);\n"
"    EmitVertex();\n"
"\n"
"    gl_Position = position + base_offset*vec4(1, 1, 0, 0);\n"
"    fUV = vec2(1.0f, 1.0f);\n"
"    EmitVertex();\n"
"\n"
"    EndPrimitive();\n"
"} \n"
"\n";

const char* fragment_circle_src = "\n"
"#version 410\n"
"\n"
"out vec4 pixelColor;\n"
"in vec3 fColor;\n"
"in vec2 fUV;\n"
"\n"
"void main() {\n"
"	if(dot(fUV, fUV) > 1.0f || fColor.r < 0.0f)\n"
"		discard;\n"
"\n"
"	pixelColor = vec4(fColor, 1.0f);\n"
"}\n"
"\n";